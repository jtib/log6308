source("TP1.R")
ls()
q2_cor
m_cor
source("TP1.R")
distance.na.450 <- sqrt(colSums((m.nonsparse[,450] - m.nonsparse)^2, na.rm=T)) # ignore les valeurs manquantes
distance.450 <- sqrt(colSums((m.sparse[,450] - m.sparse)^2)) # valeurs manquantes à 0
distance.450[450]
hist(distance.450 - distance.na.450)    # histogramme des différence
par(mfrow=c(2,2))
hist(distance.450)                      # histogramme des distances
hist(distance.na.450)                   # idem
distance.dist.na.450 <- as.matrix(dist(t(m)))[450,] # utilisation de la fonction dist avec NA
distance.dist.450 <- as.matrix(dist(t(m.sparse)))[450,] # fonction dist avec val. manq. = 0
hist(distance.dist.na.450)              # nouvel histogramme pour dist
par(mfrow=c(2,2))
hist(distance.450)                      # histogramme des distances
hist(distance.na.450)                   # idem
distance.dist.na.450 <- as.matrix(dist(t(m.nonsparse)))[450,] # utilisation de la fonction dist avec NA
distance.dist.450 <- as.matrix(dist(t(m.sparse)))[450,] # fonction dist avec val. manq. = 0
hist(distance.dist.na.450)              # nouvel histogramme pour dist
hist(distance.dist.450)                 # idem
ls()
(i.distance.450 <- min.nindex(distance.450, n.voisins))
distance.450 <- sqrt(colSums((m.sparse[,450] - m.sparse)^2))
i.distance.450 <- min.nindex(distance.450, n.voisins)
i.distance.450
min.nindex?
help(min.nindex)
??min.nindex
u.item$movie.title[450]
m <- as.matrix(m.sparse)
m[m==0] <- NA
distance.450 <- sqrt(colSums((m.sparse[,450] - m.sparse)^2))
(i.distance.450 <- min.nindex(distance.450, n.voisins))
distance.450[450]
sum(m.sparse[,450]>0)
m.sparse <- sparseMatrix(u.data[,1],u.data[,2],x=u.data[,3])
rownames(m.sparse) <- paste('u', 1:nrow(m.sparse), sep='')
colnames(m.sparse) <- paste('i', 1:ncol(m.sparse), sep='')
u.user <- read.csv(file='u.user.csv', sep='|', header=T)
u.item <- read.csv(file='u.item.csv', sep='|', header=T)
u.data <- read.csv(file='u.data.csv', sep='|', header=T)
m.sparse <- sparseMatrix(u.data[,1],u.data[,2],x=u.data[,3])
colnames(m.sparse) <- paste('i', 1:ncol(m.sparse), sep='')
rownames(m.sparse) <- paste('u', 1:nrow(m.sparse), sep='')
m <- as.matrix(m.sparse)
m[m==0] <- NA
distance.450 <- sqrt(colSums((m.sparse[,450] - m.sparse)^2))
(i.distance.450 <- min.nindex(distance.450, n.voisins))
head(distance.450)
min.nindex(distance.450, 10)
(i.distance.450 <- max.nindex(distance.450, n.voisins))
(i.distance.450 <- max.nindex(-distance.450, n.voisins))
(i.distance.450 <- min.nindex(distance.450, n.voisins))
min.nindex <- function(m, n=5) {
    i <- order(m)
    return(i[1:n])
}
(i.distance.450 <- min.nindex(distance.450, n.voisins))
q()
poids.450
poids
i.distance.450
n.voisins
votes.communs
help(cor)
help(cosine)
??cosine
library(lsa)
help(cosine)
help(cor)
m_cor
size(m.sparse-
0)
length(m.sparse)
summary(m.sparse)
length(m.sparse)
nrow(m.sparse)
ncol(m.sparse)
help(cosine)
help(cosinus.vm)
cosinus.vm
poids.450 <- cosinus.vm(m.sparse[,450], m.sparse)
length(poids.450)
length(i.distance.450)
i.distance.450
nrow(m.nonsparse)
!(4>5)
4>5
a
a <- c(3,4,6)
all(a<5)
all(a<7)
any(a<5)
b
b <- c(c(1,2,3),c(4,5,6),c(7,8,9),c(10,11,12))
b
b <- c(r(1,2,3),r(4,5,6),r(7,8,9),r(10,11,12))
b <- c(c(1,2,3);c(4,5,6);c(7,8,9);c(10,11,12))
b
b <- matrix(nrow=3, ncol=4, b)
b
c
d
d <- c(2,4)
b(,d)
b[,d]
b[1,d]
help(any)
b <- c(NA,4,NA,6)
order(b)
b
b.is.na
is.na(b)
which(is.na(b))
which(!is.na(b))
sum
a <- c(2,2,3,3)
sum(a,b)
help(sum)
a*b
a
b
sum(a*b)
sum((a*b)[which(!is.na(a*b))])
for (user in 1:nrow(m.nonsparse)) {
if is.na(m.nonsparse[user,450]) & any(m.nonsparse[user,i.distance.450]!=NA) {
1 & 0
1 | 0
for (user in 1:nrow(m.nonsparse)) {
if is.na(m.nonsparse[user,450]) {
for (user in 1:nrow(m.nonsparse)) {
if m.nonsparse[user,450]==NA {
for (user in 1:nrow(m.nonsparse)) {
if m.nonsparse[user,450]==NA & any(m.nonsparse[user,i.distance.450]!=NA) {ind.non.NA <- which(!is.na(m.nonsparse[user,i.distance.450])); m.nonsparse[user,450] <- sum((poids.450*m.nonsparse[user,ind.non.NA])[which(!is.na(poids.450*m.nonsparse[user,ind.non.NA]))])}}
for (j in 1:nrow(m.nonsparse)) {
print j}
for (j in 1:nrow(m.nonsparse)) {
print(j)}
for (user in 1:nrow(m.nonsparse)) {
if (m.nonsparse[user,450]==NA) {
if (any(m.nonsparse[user,i.distance.450]!=NA)) {
ind.non.NA <- which(!is.na(m.nonsparse[user,i.distance.450]))
m.nonsparse[user,450] <- sum((poids.450*m.nonsparse[user,ind.non.NA])[which(!is.na(poids.450*m.nonsparse[user,ind.non.NA]))])
}
}
}
for (user in 1:nrow(m.nonsparse)) {
if (is.na(m.nonsparse[user,450])) {
if (any(!is.na(m.nonsparse[user,i.distance.450]))) {
ind.non.NA <- which(!is.na(m.nonsparse[user,i.distance.450]))
m.nonsparse[user,450] <- sum((poids.450*m.nonsparse[user,ind.non.NA])[which(!is.na(poids.450*m.nonsparse[user,ind.non.NA]))])
}
}
}
length(poids.450)
length(ind.non.NA)
user
ls
ls()
length(poids.450(ind.non.NA))
poids.450
length(poids.450[ind.non.NA])
for (user in 1:nrow(m.nonsparse)) {
if (is.na(m.nonsparse[user,450])) {
if (any(!is.na(m.nonsparse[user,i.distance.450]))) {
ind.non.NA <- which(!is.na(m.nonsparse[user,i.distance.450]))
m.nonsparse[user,450] <- sum((poids.450[ind.non.NA]*m.nonsparse[user,ind.non.NA])[which(!is.na(poids.450[ind.non.NA]*m.nonsparse[user,ind.non.NA]))])
}
}
}
print(m.nonsparse[,450])
sum(TRUE,FALSE)
sum(TRUE,FALSE,TRUE)
sum(!is.na(m.nonsparse[,450]))
source(TP1)
TP1
run(TP1)
m.nonsparse <- as.matrix(m.sparse)
m.nonsparse[m.nonsparse==0] <- NA
sum(!is.na(m.nonsparse[,450]))
rmse
mse
install(metrics)
install.packages(metrics)
install.packages("metrics")
install.packages("Metrics")
library(Metrics)
rmse
length(i.distance.450[2:])
length(i.distance.450[2:_])
length(i.distance.450[2:end])
length(i.distance.450[-1])
votes.base.450 <- m.nonsparse[,450][!is.na(m.nonsparse[,450])]
length(votes.base.450)
e
e <- c(0)*63
e
rep(0,63)
e <- rep(0,63)
e
which(!is.na(m.nonsparse[,450]))
length(which(!is.na(m.nonsparse[,450])))
users.base.450 <- which(!is.na(m.nonsparse[,450]))
votes.base.450 <- m.nonsparse[,450][!is.na(m.nonsparse[,450])]
votes.compare.450 <- rep(NA,length(votes.base.450))
ind.non.NA.base <- which(!is.na(m.nonsparse[users.base.450,i.distance.450[-1]]))
votes.compare.450 <- sum((poids.450[ind.non.NA.base]*m.nonsparse[,ind.non.NA.base]))/sum(poids.450[ind.non.NA.base])
rmse(votes.base.450, votes.compare.450)
votes.compare.450
poids.450[ind.non.NA.base]
length(poids.450[ind.non.NA.base])
length(ind.non.NA.base)
length(m.nonsparse[,ind.non.NA.base])
nrows(m.nonsparse[,ind.non.NA.base])
rows(m.nonsparse[,ind.non.NA.base])
history
history()
history()
help(rownumber)
nrow(m.nonsparse[,ind.non.NA.base])
ncol(m.nonsparse[,ind.non.NA.base])
length(users.base.450)
m.nonsparse[users.base.450,]
ncol(m.nonsparse[users.base.450,])
m.nonsparse[,450][!is.na(m.nonsparse[,450])]
which
b <- c(1,2,3,3,5,3)
which(b==3)
nrow(m.nonsparse[users.base.450,i.distance.450[-1]])
ncol(m.nonsparse[users.base.450,i.distance.450[-1]])
votes.450.voisins <- m.nonsparse[users.base.450, i.distance.450[-1]]
nrow(votes.450.voisins[any(!is.na(votes.450.voisins)),])
votes.450.voisins
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins)]
nrow(votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins)])
ncol(votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins)])
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),]
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),u774]
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),i1510]
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),]$i1510
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),][c("i1247")]
votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),][,c("i1247")]
rownames(users.base.450)
colnames(users.base.450)
users.base.450
row.names(users.base.450)
print(row.names(users.base.450))
length(users.base.450)
ncol(users.base.450)
nrow(users.base.450)
names(users.base.450)
length(votes.base.450)
nrow(votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),])
ncol(votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),])
votes.450.voisins.non.na <- votes.450.voisins[rowSums(is.na(votes.450.voisins)) != ncol(votes.450.voisins),]
row.names(votes.450.voisins.non.na)
length(poids.450)
length(i.distance.450)
names(i.distance.450)
a
b
b <- matrix(2,4,c(1,2,3,4,5,6,7,8))
b
b <- matrix(nrow=2,ncol=4,c(1,2,3,4,5,6,7,8))
b
a*b
a*b[1,]
mult
rep(0,2,3)
sum(c(NA,2,3))
sum(!is.na(c(NA,2,3)))
sum(c(NA,2,3)[!is.na(c(NA,2,3))])
sum(c(NA,2,3),na.rm=TRUE)
names(poids.450)
ncol(votes.450.voisins)
length(poids.450[i.distance.450[-1]])
mult <- function(v,m){
res<-m
for(i in nrow(m)){
res[i,]<-v*m[i,]}
return res
mult <- function(v,m){
res<-m
for(i in nrow(m)){
res[i,]<-v*m[i,]}
return(res)
}
tmp<-mult(poids.450[i.distance.450[-1]],votes.450.voisins)
tmp
nrow(tmp)
ncol(tmp)
sum(tmp)
sum
colSums(tmp)
colSums(tmp,na.rm=TRUE)
names(poids.450) <- paste('i', 1:length(poids.450), sep='')
length(poids.450)
ncol(poids.450)
names(poids.450)
colNames(poids.450)
colnames(poids.450)
colnames(poids.450)
length(colnames(poids.450))
tmp<-mult(poids.450[i.distance.450[-1]],votes.450.voisins)
colnames(tmp)
tmp
colnames(tmp)
colSums(tmp, na.rm=TRUE)
source("TP1.R")
q()
